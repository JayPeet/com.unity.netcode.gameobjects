# Platforms that will be tested. The first entry (ubuntu) in this array will also
# be used for validation, code coverage etc (simple operations are performed faster on it) so it's important to be careful when changing order of test platforms!
test_platforms:
  - name: ubuntu
    type: Unity::VM
    image: package-ci/ubuntu-22.04:v4
    flavor: b1.large
    pathsep: /
    standalone: StandaloneLinux64
    editorpath: .Editor/Unity
    utr: ./utr
  - name: win
    type: Unity::VM
    image: package-ci/win10:v4
    flavor: b1.large
    pathsep: \
    standalone: StandaloneWindows64
    editorpath: .Editor\Unity.exe
    utr: .\utr.bat
  - name: mac
    type: Unity::VM::osx
    image: package-ci/macos-13:v4
    pathsep: /
    standalone: StandaloneOSX
    flavor: b1.large
    editorpath: .Editor/Unity.app/Contents/MacOS/Unity
    utr: ./utr
    
# Editors to be used for testing.
# Since NGOv2 official support started from U6 it means that only those editors should be used for testing
# The last entry in this array will also
# be used for validation, code coverage etc (windows) so it's important to be careful when changing order of validation editors!
validation_editors:
    - 6000.0
    - 6000.1
    - trunk

# Projects within the repository that will be tested. Name will be used
# for job ids, so it should not contain spaces/non-supported characters
# The first entry in this array will also
# be used for validation, code coverage etc (windows) so it's important to be careful when changing order of projects!
projects:
  - name: testproject
    path: testproject
    validate: true
    publish: true
    has_tests: true
    # Packages within a project that will be tested
    packages:
      - name: com.unity.netcode.gameobjects
        path: com.unity.netcode.gameobjects
  - name: minimalproject
    path: minimalproject
    validate: false
    publish: false
    has_tests: false
    packages:
      - name: com.unity.netcode.gameobjects
        path: com.unity.netcode.gameobjects
  - name: testproject-tools-integration
    path: testproject-tools-integration
    validate: false
    publish: false
    has_tests: true

# Scripting backends used by Standalone Playmode Tests
scripting_backends: 
  - mono
  - il2cpp

# Images with build-tools installed required for Standalone Tests - IL2CPP
win_il2cpp_test_image: dots-player/windows10:latest
